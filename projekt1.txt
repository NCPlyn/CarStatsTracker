9 pin LoRa - SPI
2pin gyro - I2C
2 pin sim - UART
2 PIN GPS - UART
4 sd card - SPI
tft display/touch
----------------------------------------------
gyro - hotovo
lora - funguje, ale kontrola připojení a obnovení připojení (asi koupit/vyrobit zesik nebo anténa lepší)
gps - hotovo
sd - hotovo
gsm - vůbec nic
web - skoro, drag,css
----------------------------------------------
normal mode:
-every 10s sample gyro data and declare if we are moving or not
-if we started moving, create new ride file+id, start sending lora every so often with that id(start/wake gps)
-if we stopped-no moving detection for few minutes (gyro or gps(distancefrom func)), end file and stop lora, sleep gps
drag mode: (best with display,or phone on holder)
-end ride file:
-listen for ready on web/display
-when gyro movement detected (not false positive), start logging all goals
-after deacc- save all to drag file, send special lora packets with basic info about drag
-repeat until switched to normal
armed mode:
-send SMS every XX minutes
-send lora constantly every XX minutes
-can power on alarm
GSM:
-get current gps pos
WIFI:
-can dump all on wifi internet connect
-control panel to change settings
-see drags, taken routes, info about them (how long, fastest speed,map,id,when taken, etc.)
-(same on nodejs server)

https://randomnerdtutorials.com/esp32-esp-now-wi-fi-web-server/ (něco jako socketio xd)
https://eu1.cloud.thethings.network/console/applications/carstatstracker/data

rideId,moving(y/n),lat,lng,kmph,epochTime

----------------------------------------------
esp:
web - wificreds, přepínaní??
wifi - save wifi in config (wifi name & pass), once in time try to connect and sent unsent data
GSM - celé udělat (send pos data & drag)
240

server:
podpora ukládání celých souborů s klíčem
podpora drag (zobrazení)


1. odzkoušet vše zatím
drag - test irl

3. opravit chyby a pokusit se najít ostatní a opravit
4. pcb & obal

lora - přejít na Helium?

----------------------------------------------
WEB:
/opmode - GET - Changes working loop mode from normal ride to drag and viceversa
  val: 0 = normal, 1 = drag
/doDrag - GET - Proceses needed drag information, recalibrates accelerometer and starts waiting for movement
  json: json with needed data generated by the website
/forceDragStop - GET - Forces drag to stop by stoping the while loop
/forceDragStart - GET - Forces drag to start, ommitting movement, still needs /doDrag
/calibrate - GET - Recalibration if needed
/getSpeed - GET - Returns current speed
/getProcDrag - GET - Returns JSON with current state of dragy
/lora - GET - Returns loraStatus, if sent with "join" param, tries to join LoraWAN.
/getfile - GET - Returns content of file from SDCard
  rideid: which rideid/dragid we want
/getfiles - GET - Returns all of the files on the SDCard root seperated by ;
/saveconfig - GET - Saves config with supplied data
  enaLora: if Lora or GSM should be used
  currentDragID & currentRideID
  detectVal: a float number how sensitive the detection of movement should be
